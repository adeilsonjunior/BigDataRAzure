matrix (c(1,2,3,4,5,6), nr = 2)
matrix (c(1,2,3,4,5,6), nr = 3)
matrix (c(1,2,3,4,5,6), nr = 6)
matrix (c( 1,2,3,4,5,6), nc = 2)
matrix (c( 1,2,3), nc = 2)
?matrix
matrix (c(1,2,3,4,5), nc = 2)
meus_dados = c(1:10)
matrix(data = meus_dados, nrow = 5, ncol = 2, byrow = T)
matrix(data = meus_dados, nrow = 5, ncol = 2)
mat <- matrix(c(2,3,4,5), nr = 2)
mat
mat[1,2]
mat[2,2]
mat[1,3]
mat[,2]
matriz = 1:3
diag(matriz)
type(matriz)
mat4 <- matrix(c(2,3,4,5), nr = 2)
mat4
mat5 <- matrix(c(6,7,8,9), nr = 2)
mat5
cbind(mat4, mat5)
rbind(mat4, mat5)
c(mat4)
lst2 <- list(2, 3, 5, 7, 11, 13)
for (i in 1:length(lst2)){
print(lst2[i])
}
for (i in 1:length(lst2)){
print(lst2[[i]])
}
lst2
mat1
mat1 <- matrix(c(1:25), nrow = 5, ncol = 5, byrow = T)
mat1
mat2 <- t(mat1)
mat2
mat3 = mat1 * mat2
mat3
mat4 = mat1 %*% mat2
mat4
vec1 = c(12,3,4,19,34)
names(vec1) = c('c1', 'c2', 'c3', 'c4', 'c5')
vec1
mat1 = matrix(c(1:50), nrow = 5, ncol = 5, byrow = T)
mat1 = matrix(c(1:5), nrow = 5, ncol = 5, byrow = T)
mat1
vec1
mat1
dimnames(mat1) = (list(c('obs1', 'obs2', 'obs3', 'obs4', 'obs5'), c('v1', 'v2', 'v3', 'v4', 'v5')))
mat1
list1 = list(2,3,c(1,2,3))
list1
names(list1) = c('dim1','dim2','dim3')
list1
df1 = data.frame(c('a','b','c'), c(1.1,1.2,1.3), c(TRUE, FALSE, TRUE))
colnames(df1) = c('caracteres','float','logico')
rownames(df1) = c('obs1', 'obs2', 'obs3')
df1
mat2 <- matrix(1:90, 10)
mat2
mat2[sample(1:50,10)] = NA
mat2
rowsum(mat1)
rowSums(mat1)
colSums(mat1)
a <- c(100, 10, 10000, 1000)
a
order(a)
a
order(a)
a[order(a)]
for (i in mat1){
if(i > 15){
print(i)
}
}
mat1 <- matrix(c(1:50), nrow = 5, ncol = 5, byrow = T)
mat1 <- matrix(c(1:50), nrow = 5, ncol = 5, byrow = T)
mat1
for (i in mat1){
if(i > 15){
print(i)
}
}
setwd("C:/FCD/BigDataRAzure/Cap04")
getwd()
library(dplyr)
library(tidyr)
library(readxl)
library(readr)
dados_netflix <- read.csv("datasets_originais/dados_netflix_Dec_2021.csv")
View(dados_netflix)
dados_pib <- read.csv("datasets_originais/dados_world_bank.csv", header = FALSE)
dados_salario <- read.csv("datasets_originais/dados_desigualdade_salarial_harvard.csv")
dados_IMDB <- read_tsv("datasets_originais/dados_imdb.tsv")
dados_top10 <- read_excel("datasets_originais/top_10_shows_netflix.xlsx")
dados_sub <- read.csv("datasets_originais/assinantes_netflix_jul_2021.csv")
countrycode <- read.csv("datasets_originais/wikipedia-iso-country-codes.csv")
dados_netflix$basic_standard_diff = (dados_netflix$Cost.Per.Month...Standard.... - dados_netflix$Cost.Per.Month...Basic....)
dados_netflix$standard_premium_diff = (dados_netflix$Cost.Per.Month...Premium.... - dados_netflix$Cost.Per.Month...Standard....)
names(dados_pib)[names(dados_pib) == 'V1'] <- 'Country'
dados_netflix_pib <- merge(dados_netflix, dados_pib, by = "Country")
dados_netflix_pib[-c(11:72, 74, 75)]
dados_netflix_pib2020 <- dados_netflix_pib[-c(11:72, 74, 75)]
names(dados_netflix_pib2020)[names(dados_netflix_pib2020) == 'V64'] <- "2020 GDP (World Bank)"
dados_salario <- dados_salario[, c(1:3)]
dados_salario_ano <- dados_salario %>% group_by(country) %>% summarise(max = max(year, na.rm = TRUE))
dados_salario <- merge(dados_salario, dados_salario_ano, by.x = c("country", "year"), by.y = c("country", "max"))
dados_netflix_pib_salario2020 <- merge(dados_netflix_pib2020, dados_salario, by.x=c("Country"), by.y=c("country"))
dados_sub <- dados_sub[,c(1, 23,24)]
complete <- merge(dados_netflix_pib_salario2020, dados_sub, by=c("Country"))
countrycode <- countrycode[,c(1, 3)]
complete <- merge(complete, countrycode, by.x=c("Country"), by.y=c("English.short.name.lower.case"))
write.csv(complete, "datasets_limpos/dataset1.csv", row.names = FALSE)
genero <- dados_IMDB[,-c(1, 4:8)]
names(genero)[names(genero) == 'primaryTitle'] <- 'show_title'
topgenero <- merge(dados_top10, genero, by = "show_title")
topgenero <- topgenero[(topgenero$category == "Films" & topgenero$titleType == "movie") | (topgenero$category == "TV" & topgenero$titleType == "tvSeries"), ]
topgenero <- distinct(topgenero, show_title, week, country_name, category, titleType,cumulative_weeks_in_top_10, .keep_all= TRUE)
topgeneropaises <- topgenero[,-c(1, 3:9)]
topgeneropaises <- separate(topgeneropaises, c("genres") , c("genero1", "genero2", "genero3"), sep = ",")
topgeneropaises <- pivot_longer(topgeneropaises, c("genero1", "genero2", "genero3"), names_to = "genero123", values_to = "genres")
generocount <- count(topgeneropaises, country_name, genres)
generocount <- na.omit(generocount)
generocount <-subset(generocount, genres!="\\N")
generocount$n <- as.numeric(generocount$n)
write.csv(generocount, "datasets_limpos/dataset2.csv", row.names = FALSE)
sunburst <- rename(generocount, label = country_name)
sunburst
View(sunburst)
View(sunburst)
sunburst$genres = sub("-", " ", sunburst$genres)
View(sunburst)
View(sunburst)
sunburst$parent = c("total  - ")
View(sunburst)
sunburst$parent <- paste(sunburst$parent, sunburst$genres)
View(sunburst)
View(sunburst)
sunburst$genres = sub("-", " ", sunburst$genres)
View(sunburst)
sunburst$parent = c("total  - ")
View(sunburst)
sunburst$parent <- paste(sunburst$parent, sunburst$genres)
sunburst$id = c(" - ")
View(sunburst)
sunburst$id <- paste(sunburst$parent, sunburst$id)
View(sunburst)
sunburst$id <- paste(sunburst$id, sunburst$label)
View(sunburst)
sunburst$n <- as.numeric(sunburst$n)
View(sunburst)
added <- aggregate(sunburst$n, list(sunburst$genres), FUN=sum)
View(added)
added <- rename(added, label = Group.1)
View(added)
added <- rename(added, n = x)
View(added)
added$n <- as.numeric(added$n)
added$genres <- c(NA)
View(added)
added$parent <- c("total")
View(added)
added$id <- c(" - ")
added$id <- paste(added$parent, added$id)
View(added)
added$id <- paste(added$id, added$label)
View(added)
total = sum(added$n)
View(total)
sunburst <- rbind(added, sunburst)
View(sunburst)
write.csv(sunburst, "datasets_limpos/dataset3.csv", row.names = FALSE)
top10sunburst <- sunburst[-c(1:28),]
top10sunburst$n <- as.numeric(top10sunburst$n)
View(top10sunburst)
top10sunburst <- top10sunburst %>%
group_by(label) %>%
top_n(10,n)
View(top10sunburst)
View(top10sunburst)
View(sunburst)
help("top_n")
View(top10sunburst)
nototal <- sunburst[-c(1),]
nototal$parent = sub("total  -  ", "", nototal$parent)
nototal$parent = sub("total", NA, nototal$parent)
nototal$id = sub("total  -  ", "", nototal$id)
View(nototal)
write.csv(nototal, "datasets_limpos/dataset5.csv", row.names = FALSE)
countrytree <- nototal[-c(1:28),]
countrytree <- rename(countrytree, parents = label)
countrytree <- rename(countrytree, labels = parent)
countrytree$id = c(" - ")
countrytree$id <- paste(countrytree$parent, countrytree$id)
countrytree$id <- paste(countrytree$id, countrytree$label)
countries <- aggregate(countrytree$n, list(countrytree$parents), FUN = sum)
countries <- rename(countries, labels = Group.1)
countries <- rename(countries, n = x)
countries$n <- as.numeric(countries$n)
countries$id <- countries$label
countries$parents <- c(NA)
countrytree <- rbind(countrytree, countries)
# Salva em disco
write.csv(countrytree, "datasets_limpos/dataset6.csv", row.names = FALSE)
View(countrytree)
library(shiny); runApp('12-Big-Data-na-Pratica2-WebApp.R')
runApp('12-Big-Data-na-Pratica2-WebApp.R')
library(shiny)
library(plotly)
library(shinythemes)
